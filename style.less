@import "./vendor/bootstrap/less/bootstrap.less";

// Bootstrap adds 18px to the container's width to get the media query
// break-point
@MAGIC_SCREEN_GUTTER: 18px;

@dark: #000;
@light: #fff;
@body-background: #fafafa;

@grid-gutter-width: 20px;
@section-spacing: 60px;
@gutter-width: 30px;
@text-width: 330px;
@thumb-width: 420px;
@advanced-width: (2 * @gutter-width) +
	(2/3 * @gutter-width) +
	@text-width +
	@thumb-width;
@screen-advanced: (@MAGIC_SCREEN_GUTTER + @advanced-width);
@screen-thumb: (@thumb-width + @MAGIC_SCREEN_GUTTER);

// Helper mixins

.project-heading-type() {
	font-family: "HelveticaNeueBlack",
		"HelveticaNeue-Black",
		"Helvetica Neue Black",
		"HelveticaNeueBold",
		"HelveticaNeue-Bold",
		"Helvetica Neue Bold",
		"TeXGyreHerosBold",
		"HelveticaNeue",
		"Helvetica Neue",
		"Arial Black",
		sans-serif;
	font-weight: 800;
	text-transform: uppercase;
}


.transform(@args...) {
	-webkit-transform: @args;
	-moz-transform: @args;
	-ms-transform: @args;
	-o-transform: @args;
	transform: @args;
}

.transform-origin(@args...) {
	-webkit-transform-origin: @args;
	-moz-transform-origin: @args;
	-ms-transform-origin: @args;
	-o-transform-origin: @args;
	transform-origin: @args;
}

.perspective(@perspective) {
	-webkit-perspective: @perspective;
	-moz-perspective: @perspective;
	-ms-perspective: @perspective;
	-o-perspective: @perspective;
	perspective: @perspective;
}

.perspective-origin(@origin) {
	-webkit-perspective-origin: @origin;
	-moz-perspective-origin: @origin;
	-ms-perspective-origin: @origin;
	-o-perspective-origin: @origin;
	perspective-origin: @origin;
}

.force-layer() {
	.transform(translateZ(0));
}

.selection(@fg, @bg) {
	._selection() {
		color: @fg;
		background-color: @bg;
	}

	::-moz-selection { ._selection(); }
	::selection { ._selection(); }
}

.ol-container() {
	// Make OL act as a container with no extra spacing
	.list-unstyled;
	margin: 0;
	.container;
}

.absolute-center(@width, @height) {
	position: absolute;;
	width: @width;
	height: @height;
	left: 50%;
	top: 50%;
	margin-left: -@width / 2;
	margin-top: -@height / 2;
}

// -- Layout

#headerbg, #bodybg {
	// Only used in advanced mode
	display: none;
}

#intro, #projects {
	.container();
}

#intro {
	.main {
		max-width: 520px;
	}

	#photo {
		// Only used in advanced mode
		display: none;
	}
}

#projects {
	.ol-container();
	padding-top: @section-spacing;
	padding-bottom: @section-spacing;

	.project {
		max-width: 520px;
		margin-bottom: @section-spacing;

		&:last-child {
			margin-bottom: 0;
		}

		.main {
			margin: 10px 0;
		}

		.image {
			display: block;
			position: relative;
			max-width: @thumb-width;

			.thumb {
				display: block;
			}

			.zoom-icon {
				.absolute-center(80px, 80px);
				background-position: center center;
				background-repeat: no-repeat;
			}

			@media (max-width: (@screen-thumb + (@grid-gutter-width / 2))) {
				margin: 0 -@grid-gutter-width / 2;

				.thumb {
					max-width: 100%;
					height: auto;
				}
			}
		}
	}
}

// -- Styling

.selection(darken(@light, 20%), lighten(@dark, 20%));

body {
	background-color: @body-background;
}

// Undo bootstrap link styling
// @TODO: Add link styling. In advanced mode: background color of color2
a, a:hover {
	color: inherit;
	text-decoration: none;
}

#intro {
	font-size: 110%;
	color: lighten(@dark, 30%);

	// No paragraph spacing
	p {
		margin: 0;
	}

	.heading {
		color: lighten(@dark, 20%);
		font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
		margin: 0 0 0.4em 0;
	}
}

#projects {
	color: @gray;
	font-size: 120%;

	.project {
		.title {
			.project-heading-type();
			font-size: 160%;
		}

		.image {
			-webkit-tap-highlight-color: rgba(0, 0, 0, 0.5);
			opacity: 0.6;

			.zoom-icon {
				opacity: 0.75;
			}

			&:focus, &:hover {
				opacity: 0.8;
				.zoom-icon {
					opacity: 1;
				}
			}

			&:active {
				opacity: 1;
			}
		}

		.desc {
			color: lighten(@gray, 10%);
		}

		.date {
			font-style: italic;

			&::after {
				content: ".";
			}
		}
	}
}

// -- Advanced Effects

@media (min-width: @screen-advanced) {
	body {
		padding-bottom: @section-spacing;
	}

	#intro, #projects {
		max-width: @advanced-width;
		padding-left: @gutter-width;
		padding-right: @gutter-width;
	}

	#intro {
		font-size: 115%;
		color: lighten(@dark, 95%);
		background-color: fadeOut(@body-background, 75%);
		padding-top: @section-spacing;
		padding-bottom: @section-spacing;
		.selection(lighten(@dark, 30%), @light);

		.heading {
			color: inherit;
		}

		.text-wrapper {
			background-color: lighten(@dark, 40%);
		}

		p {
			text-align: justify;
		}

		p .text-wrapper {
			padding: 0.1em 0;
		}

		#photo {
			display: block;
			max-width: 210px;
			border: 2px solid;
			float: right;
			opacity: 0.85;
		}
	}

	#projects {
		background-color: fadeOut(@body-background, 25%);
	}

	#projects .project {
		max-width: none;
		margin-bottom: @section-spacing * 1.5;
		.clearfix();

		.main {
			margin: 0;
			float: right;
			width: @text-width;
		}

		.image {
			float: left;
			width: @thumb-width;
		}

		.title {
			padding-right: 35px;
			margin: 0 0 0.25em 0;
		}

		.date, .desc {
			display: block;
		}

		.date {
			margin: 0 0 0.25em 0;

			&::after {
				content: none;
			}
		}
	}

	// -- Background colors

	// Make sure we cover the entire viewport
	html, body {
		min-height: 100%;
	}

	#bodybg, #headerbg {
		display: block;
		position: fixed;
		width: 100%;
		left: 0;
		top: 0;
		z-index: -1;

		// Force GPU layer for animating opacity
		.force-layer();
	}

	// Body background covers the entire page
	#bodybg {
		height: 100%;
	}

	// Header background gets height set in JS - see ./lib/effects.js
	// And it must scroll away with the header, not be fixed
	#headerbg {
		position: absolute;
	}

	// -- 3D Transforms

	// Force layers for animations (opacity and transforms)
	#intro, #projects {
		.force-layer();
	}

	// Set 3d space perspective
	// Camera at z = 800px, x = 50%, y = height of header
	body {
		.perspective(800px);
		// We're aiming to be about level with the bottom of the header. This
		// gets overridden in JS to the exact px height of the header.
		.perspective-origin(center 10%);
	}

	#intro {
		// Transform from the bottom (line up with #projects)
		.transform-origin(center bottom);
	}

	#projects {
		// Transform from the top (lien up with #intro)
		.transform-origin(center top);
	}
}
