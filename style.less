@import "./vendor/bootstrap/less/bootstrap.less";

@grid-gutter-width: 20px;
@thumb-width: 420px;
@section-spacing: 80px;
@body-background: #fafafa;

@dark: #000;
@light: #fff;

.project-heading-type() {
	font-family: "HelveticaNeueBlack",
		"HelveticaNeue-Black",
		"Helvetica Neue Black",
		"HelveticaNeueBold",
		"HelveticaNeue-Bold",
		"Helvetica Neue Bold",
		"TeXGyreHerosBold",
		"HelveticaNeue",
		"Helvetica Neue",
		"Arial Black",
		sans-serif;
	font-weight: 800;
	text-transform: uppercase;
}


.transform(@args...) {
	-webkit-transform: @args;
	-moz-transform: @args;
	-ms-transform: @args;
	-o-transform: @args;
	transform: @args;
}

.transform-origin(@args...) {
	-webkit-transform-origin: @args;
	-moz-transform-origin: @args;
	-ms-transform-origin: @args;
	-o-transform-origin: @args;
	transform-origin: @args;
}

.transform-style(@style) {
	-webkit-transform-style: @style;
	-moz-transform-style: @style;
	-ms-transform-style: @style;
	-o-transform-style: @style;
	transform-style: @style;
}

.perspective(@perspective) {
	-webkit-perspective: @perspective;
	-moz-perspective: @perspective;
	-ms-perspective: @perspective;
	-o-perspective: @perspective;
	perspective: @perspective;
}

.perspective-origin(@origin) {
	-webkit-perspective-origin: @origin;
	-moz-perspective-origin: @origin;
	-ms-perspective-origin: @origin;
	-o-perspective-origin: @origin;
	perspective-origin: @origin;
}

.force-layer() {
	.transform(translateZ(0));
}

.selection(@fg, @bg) {
	._selection() {
		color: @fg;
		background-color: @bg;
	}

	::-moz-selection { ._selection(); }
	::selection { ._selection(); }
}

.container {
	max-width: 740px;
	background-color: @body-background;
}

.selection(darken(@light, 20%), lighten(@dark, 20%));

#intro {
	.container();
	font-size: 110%;
	color: lighten(@dark, 30%);

	.main {
		max-width: 500px;
	}

	p {
		margin: 0;
	}

	#photo {
		display: none;
	}

	.heading {
		color: lighten(@dark, 20%);
		font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
		margin: 0 0 0.4em 0;
		padding: 0 0 0.1em 0;
	}

	@media (min-width: @screen-sm) {
		font-size: 123%;
		color: lighten(@dark, 95%);
		.selection(lighten(@dark, 30%), @light);
		padding: (@section-spacing * 1.2) 0 @section-spacing 0;

		.heading {
			color: inherit;
		}

		.text-wrapper {
			background-color: lighten(@dark, 33%);
		}

		p .text-wrapper {
			padding: 0.2em 0;
		}

		#photo {
			border: 2px solid;
			display: block;
			float: right;
			max-width: 200px;
			max-height: 250px;
			opacity: 0.9;
		}
	}
}

#projects {
	// Make sure OL act as a container with no extra spacing
	.list-unstyled;
	margin: 0;
	.container;

	color: @gray;
	padding: @section-spacing 0;

	.project {
		max-width: 500px;
		font-size: 120%;
		margin-bottom: @section-spacing;

		&:last-child {
			margin-bottom: 0;
		}

		.clearfix;
		.make-row();

		.main {
			.make-sm-column(5);
		}

		aside {
			.make-sm-column(7);
		}

		.title {
			.project-heading-type();
			font-size: 190%;
		}

		.image {
			-webkit-tap-highlight-color: rgba(0, 0, 0, 0.5);
			display: block;
			position: relative;
			opacity: 0.80;
			max-width: @thumb-width;

			.thumb {
				.img-responsive;
				width: 100%;
			}

			.zoom-icon {
				position: absolute;
				background-position: center center;
				background-repeat: no-repeat;
				top: 50%;
				left: 50%;
				margin-top: -40px;
				margin-left: -40px;
				width: 80px;
				height: 80px;
				opacity: 0.75;
			}

			&:link:hover {
				opacity: 1;
				.zoom-icon {
					opacity: 1;
				}
			}
		}

		.desc {
			color: lighten(@gray, 10%);
		}

		.date {
			font-style: italic;
		}

		@media (max-width: @thumb-width) {
			aside{
				padding: 0;
			}
		}

		.main {
			margin: 10px 0;

			.date::after {
				content: ".";
			}
		}

		@media (min-width: @screen-sm) {
			max-width: none;
			margin-bottom: @section-spacing * 2;

			.title {
				margin: 0 0 0.25em 0;
				text-align: right;
			}

			aside {
				float: right;
			}

			.main {
				margin: 0;
				text-align: right;
			}

			.date::after {
				content: none;
			}

			.date, .desc {
				display: block;
			}

			.date {
				margin: 0 0 0.25em 0;
			}
		}
	}
}

// ---------------------------

// -- Advanced Effects

@media (min-width: @screen-sm) {

	// Make sure we cover the entire viewport
	html, body {
		min-height: 100%;
	}

	// 3d space perspective
	// Camera at z = 800px, x = 50%, y = height of header
	body {
		.perspective(800px);
		// We're aiming to be about level with the bottom of the header. This
		// gets overridden in JS to the exact px height of the header.
		.perspective-origin(center 10%);
	}

	#intro {
		// We will apply opacity to this element which requires us to use
		// transform-style to have it use its parent's 3d context
		// .transform-style(preserve-3d);

		// We will be translating this around so make sure it is accelerated
		.force-layer();

		// Apply the rotation from the bottom of the element.
		.transform-origin(center bottom);

		background-color: fadeOut(@body-background, 75%);
	}

	#projects {
		.transform-origin(center top);

		// We will be transforming and changing opacity
		.force-layer();
	}

	// -- Background layers

	#bodybg, #headerbg {
		position: fixed;
		width: 100%;
		left: 0;
		top: 0;
		z-index: -1;

		// Force GPU layer for animating opacity
		.force-layer();
	}

	// Body background covers the entire page
	#bodybg {
		height: 100%;
	}

	// Header background gets height set in JS - see ./lib/effects.js
	// And it must scroll away with the header, not be fixed
	#headerbg {
		position: absolute;
	}
}
